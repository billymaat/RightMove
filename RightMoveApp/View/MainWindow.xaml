<mah:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:RightMoveApp"

        x:Class="RightMoveApp.MainWindow"
        xmlns:controls="clr-namespace:RightMoveApp.UserControls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:valueconverters="clr-namespace:RightMoveApp.UserControls.ValueConverters"
        mc:Ignorable="d"
        Title="RightMove Scraper" Height="450" Width="800" Language="en-GB"
        HorizontalAlignment="Stretch"
        DataContext="{Binding Source={StaticResource Locator}, Path=MainViewModel}"
        Name="mainWindow">
    <Window.Resources>
        <DataTemplate DataType="{x:Type controls:SearchParamsViewModel}">
            <controls:SearchParamsView/>
        </DataTemplate>
        <valueconverters:MinWidthConverter x:Key="MinWidthConverter"/>
    </Window.Resources>
    <Grid>
        <!--resources for data grid-->
        <Grid.Resources>
            <Style TargetType="DataGridRow">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                        <Setter Property="Background" Value="#FFFFFF" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                        <Setter Property="Background" Value="#E5F0FA" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <GroupBox Grid.Column="0" Grid.Row="0" Header="Search Params" Panel.ZIndex="10">
            <ContentControl Content="{Binding TopViewModel}"/>
        </GroupBox>
        <Button x:Name="btnSearch" Grid.Column="0" Grid.Row="1" 
                Content="Search" 
                IsDefault="True"
                Command="{Binding SearchAsyncCommand}"
                Style="{StaticResource MahApps.Styles.Button.Square}"/>
        <Grid x:Name="mainGrid" 
                  Grid.Column="0" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" 
                                  MinWidth="{Binding RightMoveSelectedItem, Converter={StaticResource MinWidthConverter}}"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="listView" 
                              Grid.Row="0"
                    ItemsSource="{Binding Path=RightMoveList}" 
                    SelectedItem="{Binding Path=RightMoveSelectedItem}"
                    AutoGenerateColumns="False"
                    HorizontalGridLinesBrush="#6297C8"
                    VerticalGridLinesBrush="#6297C8"
                    HorizontalAlignment="Stretch"
                    IsReadOnly="True"
                    AlternationCount="2">
                        <!--<DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <TextBlock Background="Orange" Text="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.PriceHistory}"
                                        TextWrapping="Wrap" HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>-->
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="ToolTip" Value="{Binding}"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.InputBindings>
                            <KeyBinding Key="Right"
                    Command="{Binding NextImageCommand}"/>
                            <KeyBinding Key="Left"
                    Command="{Binding PrevImageCommand}"/>
                        </DataGrid.InputBindings>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding OpenLink}" 
                                    CommandParameter="{Binding Path=RightMoveSelectedItem}" 
                                    PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding UpdateImages, Delay=3000}"
                                    CommandParameter="{Binding Path=RightMoveSelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Open Link" 
                        Command="{Binding OpenLink}" 
                        CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                <MenuItem Header="View Images" 
                        Command="{Binding LoadImageWindow}"
                        CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="20"/>
                            <DataGridTextColumn Header="RM Id" Binding="{Binding RightMoveId}" Width="50"/>
                            <DataGridTextColumn Header="Price" Binding="{Binding Price, StringFormat={}{0:C0}.00}" Width="100"/>
                            <DataGridTextColumn Header="House Type" Binding="{Binding HouseInfo}" Width="100"/>
                            <DataGridTextColumn Header="Address" Binding="{Binding Address}" Width="100"/>
                            <DataGridTextColumn Header="Desc" Binding="{Binding Desc}" Width="100"/>
                            <DataGridTextColumn Header="Date" Binding="{Binding Date}" Width="100"/>
                            <DataGridTextColumn Header="Agent" Binding="{Binding Agent}" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Grid.Column="0" Grid.Row="1" 
                        Content="{Binding Path=Info}"/>
                </Grid>
                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="5"
                              Visibility="{Binding RightMoveSelectedItem, Converter={StaticResource NullToVisibilityConverter}}"/>
                <Grid Grid.Column="2" 
                    HorizontalAlignment="Stretch"
                    Visibility="{Binding RightMoveSelectedItem, Converter={StaticResource NullToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Image Grid.Row="0" 
                    Source="{Binding DisplayedImage}" 
                    />
                <controls:BusySpinner Grid.Row="0"
                                      Visibility="{Binding LoadingImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock Grid.Row="1" Visibility="{Binding ImageIndexView, Converter={StaticResource NullToVisibilityConverter}}">
                    <TextBlock.Text>
                        <Binding Path="ImageIndexView"/>
                    </TextBlock.Text>
                </TextBlock>
                <Grid Grid.Row="2" HorizontalAlignment="Stretch">
                    <Grid.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="Padding" Value="5"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnLeft"
                            Grid.Column="0"
                            Content="&lt;" 
                            Command="{Binding PrevImageCommand}"/>
                    <Button x:Name="btnRight"
                            Grid.Column="1"
                        Content=">" 
                        Command="{Binding NextImageCommand}"/>
                </Grid>
            </Grid>
            </Grid>
        <ProgressBar Grid.Column="0" Grid.Row="3"
                        Minimum="0" Maximum="100"
                        MinHeight="10"
                        Name="pbStatus"
                        Visibility="{Binding IsSearching, Converter={StaticResource BooleanToCollapsedVisiblilityConverter}}"
                        IsIndeterminate="{Binding SearchAsyncCommand.Execution.IsSuccessfullyCompleted, Converter={StaticResource BooleanToReverseConverter}}"/>
    </Grid>
</mah:MetroWindow>
